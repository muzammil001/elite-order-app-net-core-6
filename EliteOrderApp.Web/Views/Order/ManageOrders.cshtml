@{
	ViewData["Title"] = "Manage Orders";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
	table.dataTable {
		width: 100%;
	}

	.dropdown-item:hover{
		background-color: #04a9f5;
	}
</style>
<div class="card">
	<div class="card-header">
		<h3 class="m-b-10">Manage Orders</h3>

	</div>
	<div class="card-block">
		<!-- [ breadcrumb ] start -->
		<div class="page-header">
			<div class="page-block">
				<div class="row align-items-center">
					<div class="col-md-12">
						<div class="page-header-title">
							<a href="@Url.Action("Index","Order")" class="btn btn-primary">Add New Order</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!-- [ breadcrumb ] end -->

		<div class="main-body">
			<div class="page-wrapper">
				<table id="orders" class="display table  compact">
					<thead>
						<tr>
							<th>Order No</th>
							<th>Order Date</th>
							<th>Delivery Date</th>
							<th>Customer Name</th>
							<th>Balance</th>
							<th>Total Bill</th>
							<th>Amount Received</th>
							<th></th>
						</tr>
					</thead>
					<tbody>
					</tbody>
					<tfoot>
					</tfoot>
				</table>
			</div>

		</div>


	</div>
</div>


@section Scripts
{
	<script>
		$(document).ready(function() {
			const cols = [
				//{
				//	data: "id",
				//	render: function (data, type, row, meta) {
				//		return meta.row + meta.settings._iDisplayStart + 1;
				//	}
				//},
				{
					data: "id"
				},
				{
					data: "orderDate",
					render: function(data) {
						const date = new Date(data);
						const month = date.getMonth() + 1;
						const currentDate = (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear();
						return `<span class="font-size-sm-bold-green">${currentDate}</span>`;
					}
				},
				{
					data: "deliveryDate",
					render: function(data) {
						const date = new Date(data);
						const month = date.getMonth() + 1;
						const currentDate = (month.toString().length > 1 ? month : "0" + month) + "/" + date.getDate() + "/" + date.getFullYear();
						return `<span class="font-size-sm-bold-crimson">${currentDate}</span>`;
					}
				},
				{
					data: "customerName",
					render: function(data, type, order) {

						return `<button class='btn btn-link js-edit-customer' data-customer-id=${order.customerId}>${order.customerName}</button>`;
					}
				},
				{
					data: "balance",
					render: function(data) {
						return `<span class="font-size-sm-bold-green">${formatMoney(data)}</span>`;
					}

				},
				{
					data: "totalAmount",
					render: function(data) {
						return `<span class="font-size-sm-bold-black">${formatMoney(data)}</span>`;
					}

				},
				{
					data: "receivedAmount",
					render: function (data) {
						return `<span class="font-size-sm-bold-crimson">${formatMoney(data)}</span>`;
					}

				},
				{
					data: "id",
					render: function (data,type, order) {
						return `<div class="pull-right">
								<div class="btn-group mb-2 mr-2">
										<button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Actions</button>
								<div class="dropdown-menu">
											<a class="dropdown-item text-info" target="_blank" href="/Order/OrderInvoice/${data}">View Invoice</a>
									<a class="dropdown-item text-info" href="/Order/EditOrder/${data}">Edit Order</a>
											<a class="dropdown-item" href="/Order/PaymentHistory/?orderId=${data}" target="_blank">Payment History</a>
									<a type="button" class="dropdown-item js-complete-order text-success " data-orderItem-id=${data}  style="cursor:pointer" > Complete this Order</button>
									<a type="button" class=" dropdown-item js-delete-order text-danger " data-orderItem-id=${data} style="cursor:pointer" > Delete Order</button></div>
								</div>
							`;

					}
				}
			];

			//rendering the table
			const table = getTable("orders", "/api/orders/get-pending-orders", cols, false);
			
			//deleting the order
			deleteRecord("orders", ".js-delete-order", "/api/orders/delete-order/", "data-orderItem-id", table);
			
			//completing the order
			approvedRecord("orders", ".js-complete-order", "/api/orders/complete-order/", "data-orderItem-id", table, "Are you sure you want to complete this order?");
			
			//editing customer
			editRecord("orders", ".js-edit-customer", "/Customer/AddOrEdit/", "data-customer-id", "Edit Customer");
			
			//using for refreshing table
			refreshTableOnClick(".refresh-table", table);

		});

	</script>
}
